<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="CloseEye.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGMAAABeCAYAAAA336rmAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAABONJREFUeF7tm2FrE0EQhv1D/dCCBSso2CKi1iKiLa2oYKURWrGF9u+feYIbtpt3
        L3vxsjux8+HBmsyt6Ty3M7ub89H21lbn2MBlGMJlGMJlGMJlGMJlGMJlGMJlGMJlGMJlGMJlGMJlGMJl
        GMJlGMJlGMJlGMJlGMJlGMJlGMJlGMJlGMJlGMJlGKKajNevXnXX19fd1eVld/T2rYx56FSTgYTb29s5
        H96/l3EPmWoymBWxDBeySDUZb6ZlKpXhQu5TtYG7kH6qyoBnT5+OWrKe7O7eQ8VsCtVlwL8IefH8efft
        y5eFBUHM5OJiFsNM3NsgQU1kwBAhxB5/+tTd3NwsxJdw/v37TEw6rjWayYBlQrirf5yfd3d3d3PS2CEw
        myxLaSoDckK4m2MJY8gIIMVi+WouAxBymekBqQxK1dnp6ewO57rH29vzcfiZ19jtE5MbM2BtFWdCBrAS
        UgkDJDBTXu7v30t+CYjpk3Ly8ePgMdeFCRkkg2SrZAErI3XdEPqksPqyULaay0AEyVBJiqHsqOuH8Hhn
        Z7YqU+Nb6CNNZeRE0NDVXTyGEAgnyOn4CGlZsprKUCKQQBOmh6xTSG58PlMrIc1kqHJBcuIjjT4h7MQZ
        49fV1Xyl9XMy6T6fnRWXm3ULH0oTGSwp0wSkIgK5hEGQoDiZiiq5w3Pjt/gCrLoM7tr0FwdKk4qHVYUw
        U0qE8G+rHvJsb0/Gr4uqMkiMOuAruQspS+l1ASUiwAxR46W8OzxcGLd2Q68qQ5Wn4+mmS8WmHIlkBULT
        fXlw0F1FPSSASDVmiupjbApV7DqoJkOVJ0qPilVMpiUnvT4mCGEvkQopFc61qhzWKlfVZHz7+nXhl1QN
        W0GS0mtVjQ9CmAmxDOSocRWqHHI6oGLHppqM9BccsnxUswpBarYghPhYBqhxc/DZ0nFV3NhUk5HeyUOa
        o5TxtyQpIYy9qgzGTRcZQ8rpv1BNhmreQ5pjKpMTXF7PCYEggiVuOl4O1cRrHbVXk5FrjquudK5//543
        1mVCPheWRASn19eaFVBNBqjmSFIpQyo+Rl0LHK9z55Jw9T6UCOczqD1QmIE1qCoDVBko7R/q2hIYf5lw
        JaJ0STwW1WXkylXJaWlfOVpGnxA2i2k8n7F0gTEW1WVA7iyoZLmLkJIZgtz0NSWEv3PyG8fx2Ur3QGPS
        RAbkHvUsmSFAspAXzxSSTWkJPUL1kVhIEBFWXbzPn63+y0IzGaCWu9BXUoaSE0JjjkUEai1jFU1lQJ+Q
        sR44y620LImA5jIgJwRI5BizJNdnrIgAEzKgTwisKoVrGFstGAI1j8n7MCMDjg4PZ3epSliAE1Tichs5
        mj/vHU1j+p7FiqEk1v5WT2FKBrBK4shbJU1BIgN9d/8y4uOVVpiTAewlKC3LZskqMCbLX1UWWwsxKSPA
        LKFXjCGFMShb8WbOmhDTMgJBSvg6NU1gDmJ5ap2ZkEuwJSEbISOG5kwC+RqX7ylupn2CpM8SP/2Z3sF7
        xJSc1oIVIRsnY10oIcBzuSp+HbiMiNZCXEZCrmSp2LFxGYJUyH/3QMKmweOeSGAj6WXqAeIyDOEyDOEy
        DOEyDOEyDOEyDOEyDOEyDOEyDOEyDOEyDOEyDOEyDOEyDOEyDOEyDOEyDOEyDOEyDOEyDOEyDOEyDOEy
        zLDV/QHEh6yc7ugddwAAAABJRU5ErkJggg==
</value>
  </data>
</root>